package com.pg.user.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.pg.user.dto.LoginRequest;
import com.pg.user.dto.UserDto;
import com.pg.user.service.UserService;

import lombok.RequiredArgsConstructor;





@RestController
@RequestMapping("/api/users")
@RequiredArgsConstructor
@CrossOrigin(origins = "http://localhost:5173")
public class UserController {

    private final UserService userService;

    @PostMapping("/login")
    public ResponseEntity<UserDto> login(@RequestBody LoginRequest request) {
        return ResponseEntity.ok(userService.login(request.getUserName(), request.getUserPassword()));
    }
}

//
//import com.pg.user.dto.LoginRequest;
//import com.pg.user.dto.UserDto;
//import com.pg.user.service.UserService;
//
//import lombok.RequiredArgsConstructor;
//
//	@RestController
//	@RequestMapping("/api/users")
//	@RequiredArgsConstructor
//	@CrossOrigin(origins = "http://localhost:5173")
//	public class UserController {
//
//	    private final UserService userService;
//
//	   
//
//	        @PostMapping("/login")
//	        public ResponseEntity<?> login(@RequestBody LoginRequest request) {
//	            try {
//	                // Attempt login
//	                UserDto userDto = userService.login(request.getUserName(), request.getPassword());
//	                return ResponseEntity.ok(userDto);
//	            } catch (Exception e) {
//	                // Return 401 if credentials are invalid
//	                return ResponseEntity
//	                        .status(401)
//	                        .body("Login failed: " + e.getMessage());
//	            }
//	        }
//	    }
//
//	    
//	    
//	    
//	    
	    
	    
	    
	    
	    
	    
	    
	   
	   /* @PostMapping("/login")
	    public ResponseEntity<UserDto> login(@RequestBody LoginRequest request) {
	        return ResponseEntity.ok(userService.login(request.getUserName(), request.getPassword()));
	    }*/
	    

	

    
    


    
    
    
    
    
    
    
    
    
    
    
