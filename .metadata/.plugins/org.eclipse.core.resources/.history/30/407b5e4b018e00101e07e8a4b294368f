package com.pg.payment.controller;

package com.pg.payment.controller;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.util.List;

import org.springframework.core.io.InputStreamResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.pg.payment.dto.PaymentDto;
import com.pg.payment.service.PaymentService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/payments")
@RequiredArgsConstructor
public class PaymentController {

    private final PaymentService paymentService;

    // Create a payment
    @PostMapping("/{userId}")
    public PaymentDto createPayment(
            @PathVariable Long userId,
            @RequestParam String paymentMethod,
            @RequestParam Double amount) {

        return paymentService.createPayment(userId, paymentMethod, amount);
    }

    // Get payment by ID
    @GetMapping("/{id}")
    public PaymentDto getPaymentById(@PathVariable Long id) {
        return paymentService.getPaymentById(id);
    }

    // Get all payments
    @GetMapping
    public List<PaymentDto> getAllPayments() {
        return paymentService.getAllPayments();
    }

    // Download PDF invoice for a payment
    @GetMapping("/{id}/invoice")
    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
        PaymentDto payment = paymentService.getPaymentById(id);

        // Generate PDF directly
        ByteArrayInputStream bis = generateInvoice(payment);

        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "inline; filename=invoice-" + id + ".pdf"); // use "attachment" to force download

        return ResponseEntity.ok()
                .headers(headers)
                .contentType(MediaType.APPLICATION_PDF)
                .body(new InputStreamResource(bis));
    }

    // Method to generate PDF invoice directly
    private ByteArrayInputStream generateInvoice(PaymentDto payment) {
        Document document = new Document();
        ByteArrayOutputStream out = new ByteArrayOutputStream();

        try {
            PdfWriter.getInstance(document, out);
            document.open();

            Font header = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18);
            Font body = FontFactory.getFont(FontFactory.HELVETICA, 12);

            // Header
            document.add(new Paragraph("PG Hostel - Rent Invoice", header));
            document.add(new Paragraph("-----------------------------"));

            // Payment details
            document.add(new Paragraph("Invoice No: P-" + payment.getPaymentId(), body));
            document.add(new Paragraph("User ID: " + payment.getUserId(), body));
            document.add(new Paragraph("Amount Paid: â‚¹ " + payment.getAmount(), body));
            document.add(new Paragraph("Date: " + payment.getPaymentDate(), body));
            document.add(new Paragraph("Mode: " + payment.getPaymentMethod(), body));

            // Footer
            document.add(new Paragraph("-----------------------------"));
            document.add(new Paragraph("Thank you for your payment!", body));

            document.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return new ByteArrayInputStream(out.toByteArray());
    }
}




















//import java.io.ByteArrayInputStream;
//import java.util.List;
//
//import org.springframework.core.io.InputStreamResource;
//import org.springframework.http.HttpHeaders;
//import org.springframework.http.MediaType;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.PathVariable;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.RestController;
//
//import com.pg.payment.dto.PaymentDto;
//import com.pg.payment.dto.PaymentResponse;
//import com.pg.payment.service.InvoiceService;
//import com.pg.payment.service.PaymentService;
//import com.pg.payment.util.InvoiceGenerator;
//
//import lombok.RequiredArgsConstructor;
//
//@RestController
//@RequestMapping("/api/payments")
//@RequiredArgsConstructor
//public class PaymentController {
//
//    private final PaymentService paymentService;
//    private final InvoiceService invoiceService;
//
//    @PostMapping("/{userId}")
//    public PaymentDto createPayment(
//            @PathVariable Long userId,
//            @RequestParam String paymentMethod) {
//
//        PaymentDto payment = paymentService.createPayment(userId, paymentMethod);
//
//        ByteArrayInputStream bis = invoiceService.generateInvoice(payment);
//        invoiceService.saveInvoice(payment.getPaymentId(), bis, "invoice-" + payment.getPaymentId() + ".pdf");
//
//        return payment;
//    }
//
//    @GetMapping("/{id}")
//    public PaymentDto getPaymentById(@PathVariable Long id) {
//        return paymentService.getPaymentById(id);
//    }
//
//    @GetMapping
//    public List<PaymentDto> getAllPayments() {
//        return paymentService.getAllPayments();
//    }
//
//   /* @GetMapping("/{id}/invoice")
//    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
//        Invoice invoice = invoiceService.getInvoiceByPaymentId(id);
//
//        HttpHeaders headers = new HttpHeaders();
//        headers.add("Content-Disposition", "inline; filename=" + invoice.getFileName());
//
//        return ResponseEntity.ok()
//                .headers(headers)
//                .contentType(MediaType.APPLICATION_PDF)
//                .body(new InputStreamResource(new ByteArrayInputStream(invoice.getPdfData())));
//    }*/
//    
//    @GetMapping("/{id}/invoice")
//    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
//        PaymentDto payment = paymentService.getPaymentById(id); // your DTO
//        ByteArrayInputStream bis = InvoiceGenerator.generateInvoice(payment);
//
//        HttpHeaders headers = new HttpHeaders();
//        headers.add("Content-Disposition", "inline; filename=invoice-" + id + ".pdf");
//
//        return ResponseEntity.ok()
//                .headers(headers)
//                .contentType(MediaType.APPLICATION_PDF)
//                .body(new InputStreamResource(bis));
//    }
//
//}
