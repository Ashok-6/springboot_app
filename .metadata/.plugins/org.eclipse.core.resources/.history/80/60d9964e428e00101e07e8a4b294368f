package com.pg.payment.util;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.time.format.DateTimeFormatter;

import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.draw.LineSeparator;
import com.pg.payment.dto.PaymentDto;

public class InvoiceGenerator {

    public static ByteArrayInputStream generateInvoice(PaymentDto payment) {
        Document document = new Document(PageSize.A4, 36, 36, 36, 36);
        ByteArrayOutputStream out = new ByteArrayOutputStream();

        try {
            PdfWriter.getInstance(document, out);
            document.open();

            // Fonts
            Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 20);
            Font headerFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12);
            Font bodyFont = FontFactory.getFont(FontFactory.HELVETICA, 12);

            // Title
            Paragraph title = new Paragraph("PG Hostel - Rent Invoice", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);

            document.add(new Paragraph(" "));
            document.add(new LineSeparator());
            document.add(new Paragraph(" "));

            // Create table with 2 columns
            PdfPTable table = new PdfPTable(2);
            table.setWidthPercentage(100);
            table.setSpacingBefore(10f);
            table.setSpacingAfter(10f);

            // Column widths
            float[] columnWidths = {2f, 3f};
            table.setWidths(columnWidths);

            // Add table cells
            addCell(table, "Invoice No:", headerFont);
            addCell(table, "P-" + payment.getPaymentId(), bodyFont);

            addCell(table, "User ID:", headerFont);
            addCell(table, String.valueOf(payment.getUserId()), bodyFont);

            addCell(table, "Amount Paid:", headerFont);
            addCell(table, "â‚¹ " + payment.getAmount(), bodyFont);

            addCell(table, "Payment Method:", headerFont);
            addCell(table, payment.getPaymentMethod(), bodyFont);

            addCell(table, "Payment Date:", headerFont);
            String formattedDate = payment.getPaymentDate() != null
                    ? payment.getPaymentDate().format(DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm"))
                    : "N/A";
            addCell(table, formattedDate, bodyFont);

            document.add(table);

            // Footer
            Paragraph footer = new Paragraph("Thank you for your payment!", bodyFont);
            footer.setAlignment(Element.ALIGN_CENTER);
            document.add(footer);

            document.close();

        } catch (Exception e) {
            e.printStackTrace();
        }

        return new ByteArrayInputStream(out.toByteArray());
    }

    private static void addCell(PdfPTable table, String text, Font font) {
        PdfPCell cell = new PdfPCell(new Phrase(text, font));
        cell.setBorder(Rectangle.NO_BORDER);
        table.addCell(cell);
    }
}
