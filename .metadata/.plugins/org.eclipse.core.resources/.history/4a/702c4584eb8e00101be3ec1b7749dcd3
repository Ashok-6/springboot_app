package com.pg.admin.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.pg.admin.dto.AdminDto;
import com.pg.admin.dto.LoginRequest;
import com.pg.admin.dto.LoginResponse;
import com.pg.admin.security.JwtUtil;
import com.pg.admin.service.AdminService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/admin")
@RequiredArgsConstructor
public class AdminController {

    private final AdminService adminService;
    private final JwtUtil jwtUtil;

    // ✅ Register a new Admin
    @PostMapping("/register")
    public ResponseEntity<AdminDto> register(@RequestBody LoginRequest request) {
        AdminDto dto = AdminDto.builder()
                .adminName(request.getAdminName())
                .build();

        AdminDto savedAdmin = adminService.register(dto, request.getPassword());
        return ResponseEntity.ok(savedAdmin);
    }

    // ✅ Login & get JWT
    @PostMapping("/login")
    public ResponseEntity<LoginResponse> login(@RequestBody LoginRequest request) {
        LoginResponse response = adminService.login(request);
        return ResponseEntity.ok(response);
    }/*
    
    @PostMapping("/login")
    public ResponseEntity<String> login(@RequestBody LoginRequest request) {
        String token = adminService.login(request);
        return ResponseEntity.ok(token);
    }*/

 
    /*/ ✅ Get current admin details using JWT  **** for postman   ***
    @GetMapping("/me")
    public ResponseEntity<AdminDto> getAdminDetails(@RequestHeader("Authorization") String token) {
        String jwtToken = token.startsWith("Bearer ") ? token.substring(7) : token;
        String username = jwtUtil.extractUsername(jwtToken);

        AdminDto admin = adminService.getAdminDetails(username);
        return ResponseEntity.ok(admin);
    }*/

    @GetMapping("/me")
    public ResponseEntity<String> getAdminDetails(@RequestHeader("Authorization") String authHeader) {
        String token = authHeader.substring(7);
        String username = jwtUtil.extractUsername(token);
        return ResponseEntity.ok("Hello Admin: " + username);
    }
}
