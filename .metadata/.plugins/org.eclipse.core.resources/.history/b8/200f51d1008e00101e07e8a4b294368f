package com.pg.payment.controller;

import java.io.ByteArrayInputStream;
import java.util.List;

import org.springframework.core.io.InputStreamResource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.pg.payment.dto.PaymentDto;
import com.pg.payment.service.InvoiceService;
import com.pg.payment.service.PaymentService;
import com.pg.payment.util.InvoiceGenerator;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/payments")
@RequiredArgsConstructor
public class PaymentController {

    private final PaymentService paymentService;
    private final InvoiceService invoiceService;

    /**
     * Create a new payment for a user and generate the invoice.
     *
     * @param userId        ID of the user
     * @param paymentMethod Payment method (e.g., Cash, Online)
     * @param amount        Amount paid
     * @return PaymentDto containing payment details
     */
    @PostMapping("/{userId}")
    public PaymentDto createPayment(
            @PathVariable Long userId,
            @RequestParam String paymentMethod,
            @RequestParam Double amount) {

        // Create payment
        PaymentDto payment = paymentService.createPayment(userId, paymentMethod, amount);

        // Generate and save invoice
        ByteArrayInputStream bis = InvoiceGenerator.generateInvoice(payment);
        invoiceService.saveInvoice(payment.getPaymentId(), bis, "invoice-" + payment.getPaymentId() + ".pdf");

        return payment;
    }

    /**
     * Get payment details by payment ID.
     *
     * @param id Payment ID
     * @return PaymentDto
     */
    @GetMapping("/{id}")
    public PaymentDto getPaymentById(@PathVariable Long id) {
        return paymentService.getPaymentById(id);
    }

    /**
     * Get all payments.
     *
     * @return List of PaymentDto
     */
    @GetMapping
    public List<PaymentDto> getAllPayments() {
        return paymentService.getAllPayments();
    }

    /**
     * Download or view the invoice PDF for a specific payment.
     *
     * @param id Payment ID
     * @return ResponseEntity containing PDF stream
     */
    @GetMapping("/{id}/invoice")
    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
        PaymentDto payment = paymentService.getPaymentById(id);

        // Generate PDF invoice
        ByteArrayInputStream bis = InvoiceGenerator.generateInvoice(payment);

        HttpHeaders headers = new HttpHeaders();
        headers.add("Content-Disposition", "inline; filename=invoice-" + id + ".pdf"); // "attachment" for download

        return ResponseEntity.ok()
                .headers(headers)
                .contentType(MediaType.APPLICATION_PDF)
                .body(new InputStreamResource(bis));
    }
}






















//import java.io.ByteArrayInputStream;
//import java.util.List;
//
//import org.springframework.core.io.InputStreamResource;
//import org.springframework.http.HttpHeaders;
//import org.springframework.http.MediaType;
//import org.springframework.http.ResponseEntity;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.PathVariable;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.RestController;
//
//import com.pg.payment.dto.PaymentDto;
//import com.pg.payment.dto.PaymentResponse;
//import com.pg.payment.service.InvoiceService;
//import com.pg.payment.service.PaymentService;
//import com.pg.payment.util.InvoiceGenerator;
//
//import lombok.RequiredArgsConstructor;
//
//@RestController
//@RequestMapping("/api/payments")
//@RequiredArgsConstructor
//public class PaymentController {
//
//    private final PaymentService paymentService;
//    private final InvoiceService invoiceService;
//
//    @PostMapping("/{userId}")
//    public PaymentDto createPayment(
//            @PathVariable Long userId,
//            @RequestParam String paymentMethod) {
//
//        PaymentDto payment = paymentService.createPayment(userId, paymentMethod);
//
//        ByteArrayInputStream bis = invoiceService.generateInvoice(payment);
//        invoiceService.saveInvoice(payment.getPaymentId(), bis, "invoice-" + payment.getPaymentId() + ".pdf");
//
//        return payment;
//    }
//
//    @GetMapping("/{id}")
//    public PaymentDto getPaymentById(@PathVariable Long id) {
//        return paymentService.getPaymentById(id);
//    }
//
//    @GetMapping
//    public List<PaymentDto> getAllPayments() {
//        return paymentService.getAllPayments();
//    }
//
//   /* @GetMapping("/{id}/invoice")
//    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
//        Invoice invoice = invoiceService.getInvoiceByPaymentId(id);
//
//        HttpHeaders headers = new HttpHeaders();
//        headers.add("Content-Disposition", "inline; filename=" + invoice.getFileName());
//
//        return ResponseEntity.ok()
//                .headers(headers)
//                .contentType(MediaType.APPLICATION_PDF)
//                .body(new InputStreamResource(new ByteArrayInputStream(invoice.getPdfData())));
//    }*/
//    
//    @GetMapping("/{id}/invoice")
//    public ResponseEntity<InputStreamResource> downloadInvoice(@PathVariable Long id) {
//        PaymentDto payment = paymentService.getPaymentById(id); // your DTO
//        ByteArrayInputStream bis = InvoiceGenerator.generateInvoice(payment);
//
//        HttpHeaders headers = new HttpHeaders();
//        headers.add("Content-Disposition", "inline; filename=invoice-" + id + ".pdf");
//
//        return ResponseEntity.ok()
//                .headers(headers)
//                .contentType(MediaType.APPLICATION_PDF)
//                .body(new InputStreamResource(bis));
//    }
//
//}
